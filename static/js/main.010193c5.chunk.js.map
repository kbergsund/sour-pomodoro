{"version":3,"sources":["components/Movie.js","apiCalls.js","components/ClickedMovie.js","components/ClickedMovieWrapper.js","components/ErrorPage.js","components/Sort.js","components/MovieContainer.js","components/Header.js","App.js","index.js"],"names":["Movie","id","poster","rating","className","to","src","alt","stars","Math","round","outOf","full","empty","stroke","fetchData","url","fetch","then","response","ok","json","Error","status","ClickedMovie","componentDidMount","props","clickedId","data","setState","currentMovie","movie","catch","error","message","clickedMovieNetworkErr","handleUnavailableData","parseInt","Intl","NumberFormat","format","state","displayCurrentMovie","this","handleError","style","backgroundImage","title","Date","toLocaleDateString","timeZone","revenue","budget","runtime","tagline","overview","color","type","React","Component","ClickedMovieWrapper","useParams","ErrorPage","Sort","sortMovies","useLocation","pathname","onChange","e","target","value","hidden","MovieContainer","setTimeout","movieData","movies","networkErr","sortBy","includes","sortType","slice","length","sort","a","b","allMovies","map","path","element","Header","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.010193c5.chunk.js","sourcesContent":["import React from 'react'\nimport '../scss/Movie.scss'\nimport { Link } from 'react-router-dom';\nimport Star from 'simple-rating-stars'\n\nconst Movie = ({ id, poster, rating }) => {\n  return (\n    <article className=\"movie\">\n      <Link to={`/movies/${id}`}>\n        <img\n          className=\"poster\"\n          src={poster}\n          alt=\"movie poster\">\n        </img>\n      </Link>\n        <Star\n        stars={Math.round(rating)}\n        outOf={10}\n        full={'#ffffff'} \n        empty={'##000000'}\n        stroke={'#a33c00'}\n        />\n    </article>\n  )\n}\n\nexport default Movie","const fetchData = (url) => {\n  return fetch(`https://rancid-tomatillos.herokuapp.com/api/v2/${url}`)\n    .then(response => {\n      if (response.ok) {\n        return response.json()\n      } else {\n        throw new Error(response.status)\n      }\n    })\n}\n\nexport default fetchData","import React from 'react'\nimport '../scss/ClickedMovie.scss'\nimport fetchData from '../apiCalls'\nimport { Link } from 'react-router-dom'\nimport { FulfillingBouncingCircleSpinner } from 'react-epic-spinners'\n\nclass ClickedMovie extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      currentMovie: null,\n      clickedMovieNetworkErr: null\n    }\n  }\n\n  componentDidMount = () => {\n    fetchData(`movies/${this.props.clickedId}`)\n      .then(data => this.setState({\n        currentMovie: data.movie,\n      }))\n      .catch(error => error.message === '500' &&\n        this.setState({\n          clickedMovieNetworkErr: new Error('404')\n        }))\n  }\n\n  handleUnavailableData = (data) => {\n    if (!data) {\n      return 'N/A'\n    } else if (parseInt(data)) {\n      return `$${new Intl.NumberFormat().format(data)}`\n    } else {\n      return data\n    }\n  }\n\n  render() {\n    const displayCurrentMovie = this.state.clickedMovieNetworkErr ? this.props.handleError(this.state.clickedMovieNetworkErr) :\n      !this.state.currentMovie ?\n        <div className=\"loading\">\n          <FulfillingBouncingCircleSpinner color=\"#942700\" />\n        </div> :\n        <section className=\"clicked-image\" style={{\n          backgroundImage: `url(${this.state.currentMovie['backdrop_path']}`\n        }}>\n          <div className=\"movie-stats\">\n            <h3>{this.state.currentMovie.title}</h3>\n            <p>Rating: {Math.round(this.state.currentMovie['average_rating'] * 10) / 10}/10</p>\n            <p>Release Year: {new Date(this.state.currentMovie['release_date']).toLocaleDateString('en-US', {timeZone: 'UTC'})}</p>\n            <p>Revenue: {this.handleUnavailableData(this.state.currentMovie.revenue)}</p>\n            <p>Budget: {this.handleUnavailableData(this.state.currentMovie.budget)}</p>\n            <p>Runtime: {this.state.currentMovie.runtime} minutes</p>\n            <p>Tagline: {this.handleUnavailableData(this.state.currentMovie.tagline)}</p>\n            <p>Overview: {this.state.currentMovie.overview}</p>\n          </div>\n        </section>\n\n    return (\n      <article className=\"clicked-movie\">\n        {this.state.currentMovie &&\n          <Link \n          className='x-button'\n          to='/'>\n            <button type=\"button\">x</button>\n          </Link>}\n        {displayCurrentMovie}\n      </article>\n    )\n  }\n}\n\nexport default ClickedMovie;","import React from 'react'\nimport ClickedMovie from './ClickedMovie'\nimport { useParams } from 'react-router-dom'\n\nconst ClickedMovieWrapper = ({ handleError }) => {\n  const clickedId = useParams().id;\n  return (\n    <ClickedMovie clickedId={`${clickedId}`} handleError={handleError}/>\n  )\n}\n\nexport default ClickedMovieWrapper","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport '../scss/ErrorPage.scss'\n\nconst ErrorPage = () => {\n  return (\n    <section className=\"error-container\">\n        <h2>404-Invalid URL</h2>\n        <p className=\"spooky-error\">Whoa...kinda spooky in here</p>\n        <Link to=\"/\"\n        className='error-link'>Get me outta here!</ Link>\n      </section>\n  )\n}\n\nexport default ErrorPage","import React from 'react'\nimport { useLocation } from 'react-router-dom'\nimport '../scss/Sort.scss'\n\nconst Sort = ({ sortMovies, error }) => {\n  const location = useLocation()\n  if (location.pathname === '/' && !error) {\n    return (\n      <select onChange={(e) => sortMovies(e.target.value)}>\n        <option hidden>Sort By</option>\n        <option value=\"title\">A-Z</option>\n        <option value=\"title2\">Z-A</option>\n        <option value=\"average_rating\">Rating: Sour-Sweet</option>\n        <option value=\"average_rating2\">Rating: Sweet-Sour</option>\n        <option value=\"release_date\">Old-New</option>\n        <option value=\"release_date2\">New-Old</option>\n      </select>\n    )\n  } else {\n    return (\n      null\n    )\n  }\n}\n\nexport default Sort;","import React, { Component } from 'react'\nimport Movie from './Movie'\nimport ClickedMovieWrapper from './ClickedMovieWrapper'\nimport '../scss/MovieContainer.scss'\nimport fetchData from '../apiCalls'\nimport { Route, Routes } from 'react-router-dom';\nimport { FulfillingBouncingCircleSpinner } from 'react-epic-spinners'\nimport ErrorPage from \"./ErrorPage\";\nimport Sort from './Sort'\n\n\nclass MovieContainer extends Component {\n  constructor() {\n    super()\n    this.state = {\n      movieData: null,\n      networkErr: ''\n    }\n  }\n\n  componentDidMount = () => {\n    fetchData('movies')\n      .then(data => setTimeout(() => {\n        this.setState({\n          movieData: data.movies,\n        })\n      }, 500))\n      .catch(error => {\n        this.setState({\n          networkErr: error\n        })\n      })\n  }\n\n  handleError = (error) => {\n    if (error.message === '500') {\n      return <h2>A server error occured, super bummer. 😕 Try again later.</h2>\n    }\n    else if (error.message === '404') {\n      return <>\n        <ErrorPage />\n      </>\n    } else {\n      return <h2>An unknown error occured, can't help ya there 🤷‍♀️</h2>\n    }\n  }\n\n  sortMovies = (sortBy) => {\n    if (this.state.movieData) {\n      if (!sortBy.includes('2')) {\n        this.setState({\n          movieData: this.state.movieData.sort((a, b) => {\n            if (a[sortBy] < b[sortBy]) {\n              return -1\n            } else if (a[sortBy] > b[sortBy]) {\n              return 1\n            } else {\n              return 0\n            }\n          })\n        })\n      } else {\n        const sortType = sortBy.slice(0, sortBy.length - 1)\n        this.setState({\n          movieData: this.state.movieData.sort((a, b) => {\n            if (a[sortType] > b[sortType]) {\n              return -1\n            } else if (a[sortType] < b[sortType]) {\n              return 1\n            } else {\n              return 0\n            }\n          })\n        })\n      }\n    }\n  }\n\n  render() {\n    const allMovies = this.state.networkErr ? this.handleError(this.state.networkErr) :\n      !this.state.movieData ?\n        <div className=\"loading\">\n          <p>Loading...beep boop...uh...beep</p>\n          <FulfillingBouncingCircleSpinner color=\"#942700\" />\n        </div>\n        : this.state.movieData.map(movie => {\n          return <Movie key={movie.id} id={movie.id} poster={movie['poster_path']} rating={movie['average_rating']} />\n        })\n\n    return (\n      <main className=\"movie-container\">\n        <Sort className=\"sort-container\" error={this.state.networkErr}\n          sortMovies={this.sortMovies} />\n        <div className=\"movie-grid\">\n          <Routes>\n            <Route path='/:invalidURL' element={<ErrorPage />} />\n            <Route path='/' element={allMovies} />\n            <Route path='/movies/:id' element={<ClickedMovieWrapper handleError={this.handleError} />} />\n          </Routes>\n        </div>\n      </main>\n    )\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport default MovieContainer;","import React from 'react'\nimport '../scss/Header.scss'\nimport { Link } from 'react-router-dom';\n\nconst Header = () => {\n  return (\n    <header>\n      <Link className='header-link'\n      to=\"/\">\n      <h1>sour pomodoro</h1>\n      </Link>\n    </header>\n  )\n}\n\nexport default Header","import './scss/App.scss';\nimport React, { Fragment } from 'react';\nimport MovieContainer from './components/MovieContainer';\nimport Header from './components/Header';\n\nfunction App() {\n  return (\n    <Fragment>\n      <Header />\n      <MovieContainer />\n    </Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}